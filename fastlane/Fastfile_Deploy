desc 'Deploy student to Firebase & tutor to ASC'
lane :deploy_staging do
  bump_build
  deploy_to_firebase(scheme: 'Rythmico')
  deploy_to_firebase(scheme: 'Tutor')
end

private_lane :deploy_to_firebase do |options|
  build_app(configuration: 'Staging', scheme: options[:scheme], export_method: 'ad-hoc')
  firebase_app_distribution(
    googleservice_info_plist_path: 'GoogleService-Info.plist',
    testers_file: 'fastlane/staging-testers.txt',
    release_notes: changelog_from_git_commits(
      commits_count: 20,
      pretty: '- %b (%h)', # - PR title (abcd1234)
      match_lightweight_tag: false, # Match only tags, not branches
      merge_commit_filtering: 'only_include_merges', # Include only merge commits so we can extract PR title from commit body (%b)
    ),
  )
end

desc 'Bump app version numbers'
lane :bump_version do
  ['Rythmico', 'RythmicoTutor'].each do |target|
    current_version = get_version_number(target: target)
    UI.user_error! 'Version number not found' unless current_version
    prompt_version = ask("New #{target.downcase} app version (#{current_version}):")
    new_version = prompt_version.empty? ? current_version : prompt_version
    set_info_plist_value(path: "#{target}/Supporting Files/Info.plist", key: 'CFBundleShortVersionString', value: new_version)
    git_commit(path: "#{target}/Supporting Files/Info.plist", message: "Bump #{target} app version (#{new_version})", allow_nothing_to_commit: true)
  end
end

desc 'Deploy to App Store Connect'
lane :deploy_live do
  bump_build
  deploy_to_asc(scheme: 'Rythmico')
  deploy_to_asc(scheme: 'Tutor')
end

private_lane :deploy_to_asc do |options|
  build_app(configuration: 'Release', scheme: options[:scheme], export_method: 'app-store')
  upload_to_testflight(skip_submission: true, skip_waiting_for_build_processing: true)
end

################
#### Shared ####
################

private_lane :bump_build do
  bump_build_number(plist: 'Rythmico/Supporting Files/Info.plist')
  bump_build_number(plist: 'RythmicoTutor/Supporting Files/Info.plist')

  if ENV['GITHUB_ACTIONS']
    sh 'git config user.name "GitHub Actions"'
    sh 'git config user.email actions@github.com'
  end

  version_number = get_version_number(target: 'Rythmico')
  UI.user_error! 'Version number not found' unless version_number
  build_number = lane_context[:BUILD_NUMBER].to_s
  UI.user_error! 'Build number not found' unless build_number

  sh 'git add "../**/Info.plist"'
  sh "git commit" + " --author '#{last_git_commit_author}'" + " -m 'Bump build number (#{build_number}) [skip ci]'"
  add_git_tag(tag: version_number + '/' + build_number)
  push_to_git_remote(tags: true)
end
